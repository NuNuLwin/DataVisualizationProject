export const AxisLeft = ({ yScale, text_wrap_count = 60, maxWidth = 200 }) => {
  const wrapText = (text) => {
    const words = text.split(" "); // Split text into words
    const lines = [];
    let currentLine = words[0];

    // Group words into lines based on maxWidth
    for (let i = 1; i < words.length; i++) {
      const word = words[i];
      const testLine = currentLine + " " + word;

      // Check if the test line exceeds the maxWidth
      if (testLine.length > text_wrap_count) {
        lines.push(currentLine); // Add the current line to the lines array
        currentLine = word; // Start a new line
      } else {
        currentLine = testLine; // Add the word to the current line
      }
    }

    lines.push(currentLine); // Add the last line
    return lines; // Return the array of lines
  };

  return yScale.domain().map((tickValue) => {
    const lines = wrapText(tickValue); // Get the wrapped lines for the tick value

    return (
      <g className="tick" key={tickValue}>
        <text
          style={{ textAnchor: "end" }}
          x={-3}
          y={yScale(tickValue) + yScale.bandwidth() / 2}
        >
          {lines.map((line, index) => (
            <tspan
              key={index}
              x={-3}
              dy={index === 0 ? "0em" : "1.2em"} // Adjust vertical spacing for new lines
            >
              {line}
            </tspan>
          ))}
        </text>
      </g>
    );
  });
};
